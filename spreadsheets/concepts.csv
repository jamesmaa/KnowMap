Node Id,Node Title,Related Nodes,Prereq Nodes,Next Nodes,Content,Question
1000,Memory Layout for a Process (Background),,,,The memory allocated for a process contains blah blah blah. The stack consists of frames. Frames contain blah blah blah.,
1001,Stack Smashing,,1000,1002,The process of performing a buffer overflow on the stack part of memory.,
1002,Heap Smashing,,1000,1003,The process of performing a buffer overflow on the heap part of memory.,
1003,No-Op slide,,"1000,1001",1004,"A no-op slide a big part of memory full of no-ops to which an approximate return address can direct back to, and the slide is run until it reaches the shell code.",
1004,Double Free,,"1000,1001",,A double free presents a vulnerability if a piece of allocated memory ( malloc ) is freed twice from memory,
1005,Integer Overflow,,1001,,Different form of buffer overflow that usually requires using unsigned integers to attain extremely large numbers to overflow memory.,
1006,Arc Injection,,1000,,"Sometimes referred to return-to-libc, this is an attack that uses a return address of another program already loaded into memory",
1007,Format String Vul,,1000,,"This is a vulnerability in which functions that perform formatting, like printf, can be possibly used to print the stack.",
1008,Stack Canaries,,1001,,"The stack canary is a ""secret"" code of sorts inserted into the memory stack. If this code is overwritten then the program will quit as it is likely a buffer overflow is occurring.",
1009,Address Space Layout Randomization,,1001,,Randomly arranging different essentials to a programs data area to exacerbate target address prediction,
1010,W^X,,,,A non executable stack allows for any commands not to run from the memory especially if a buffer overflow might take place.,
1011,JMP Target Verification,,,,"A technique to deter buffer overflow by ""double checking"" the target address",
1012,Return Address Stack,,,,Placing the return addresses outside of the frame into a separate stack so that buffer overflows cannot modify any of these,
1013,Program Verification,,,,"A method of proving qualities of a program, using formal methods of mathematics.",
1014,Syntactic Analysis,,,,A method of program analysis in which a program's static code is parsed for dangerous or uncommon syntactic situations.,
1015,Dataflow Methods,,,,"A method of program analysis in which the value of variables are considered, but only approximated.",
1016,Whitebox Fuzzing,,,,An approach of random generation which also uses dynamic symbolic execution to execute a program dynamically and navigate through different paths. i.e. if a program has if ( x==10 ) white boxing will have a better chance of going down this path than blackbox.,
1017,Blackbox Fuzzing,,,,Random generation of well-formed inputs to test various programs,
1018,Dynamic Symbolic Execution,,,,Dynamic symbolic execution is using methods to debug a program path by path as opposed to randomly fuzzing.,
1019,Supporting graphs,,,,"(Insert useful graph, though we probably don't need an extra node just for this)",
1020,Halting Problem,,,,"The theorem that proves that given a program and an input, it is impossible to tell whether or not it will run infinitely or stop at some point. Essentially given a program and input, no algorithm can help determine if an executable will eventually stop.",
1021,Physical Air Gap,,,,"A process in which super secure computers are isolated and protected from attacks by an ""air gap"" of space/protection electromagnetically, physically, and electrically.",
1022,Background / Timeline,,,,A Virtual Machine is a guest operating system installed within a running host operating system.,
1023,Isolation from host system Issues,,,,The concept of complete isolation of a host machine and virtual machine running on it. Each should run as separate entities and unable to directly interfere with each others' processes,
1024,Isolation from neighbor VMs,,,,The concept of complete isolation of various virtual machines from each other. They should act as adjacent systems and unable to directly interfere with each others' processes,
1025,VMM - The Virtual Machine Monitor,,,,"Also known as a hypervisor, it is one of the techniques to allow guest operating systems to run on a machine.",
1026,Breaking Across Boundaries: Covert Channels,,,,A Covert Channel is a way to transmit information between VMs that takes advantage of the fact that VMs are only emulated machines.,
1027,Defense Against Compromised VMs: VMM Introspection,,,,A technique which allows the hypervisor to check and see if the machine has been compromised and turned into a guest OS,
1028,Subverting the VM Isolation,,,,A red pill allows for an attacker to determine if program is running within a virtual machine. A blue pill allows for an attacker to create a hardware hypervisor and switch the main OS to a guest OS and allow for manipulation by malware,
1029,Software Fault Isolation,,,,The practice of running processes in separate address spaces only allowing small jumps in memory.,
1030,Example: Javascript in Browser,,,,Browser separates the javascript and browsing functionality to incur isolation of the two modules.,
1031,Compartmentalization; modularity (?),,,,"The practice of dividing an application into high-level components, each of which have specific security requirements.",
1032,Principle of Least Privilege,,,,The practice of granting a system module only the minimal privileges needed for its intended purposes.,
1033,ACL,,,,"Access Control Lists, a system that implements Access Control, is a list of permissions attached to an object in a file system.",
1034,Capabilities,,,,"Capabilities, a system that implements Access Control, are tokens of permission that can be granted to users and copied among users.",
1035,Role-Based Access Control,,,,"Role-Based Access Control is a system that implements Access Control in which user roles are created with specific access, and users are assigned to roles.",
1036,Unix,1037,,,Unix uses Access Control Lists to grant users specific control to files.,
1037,Windows,1036,,,Windows uses Access Control Lists augmented with impersonation tokens (a restricted capability system) and security descriptors.,
1038,Browser (Chrome),,,,"Chromium uses mandatory access control, and breaks operation into communicating but isolated components.",
1039,Janis,,,,"Janis implements a System Call Interposition design that uses the Linux ptrace utility to create ""monitor processes"" that detect unauthorized system calls.",
1040,systrace,,,,"systrace allows for System Call Interposition by passing monitored system calls to a monitor process, which decides to permit or deny the call based on policy.",
1041,Ostia,,,,"A delegation design that implements System Call Interposition, Ostia prevents any monitored application from performing a system call and instead requires that all system calls be directed through an agent that decides if the call is allowed.",
1042,Policies Specification,,,,"There are several additional issues to consider when specifying a reference monitor policy (For example, what should the system do in the event a process ",